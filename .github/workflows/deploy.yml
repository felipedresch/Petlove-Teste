name: CI/CD Petlove AI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-and-build:
    name: Testes e Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Instalar UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Instalar dependências
        run: |
          uv sync
          
      - name: Rodar testes
        run: |
          uv run pytest tests/ -v
          
      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ptlv:test
          cache-from: type=gha # cache do GitHub Actions
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy na VM
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}  
          port: 22                             
          
          # Script que vai rodar dentro da VM
          script: |
            cd /home/${{ secrets.VM_USER }}/apps/ptlv
            
            # Puxar as últimas alterações do GitHub
            echo "Puxando código atualizado do GitHub..."
            git pull origin main
            
            # Parar containers antigos
            echo "Parando containers..."
            docker compose down
            
            # Fazer rebuild da imagem Docker com as mudanças
            echo "Fazendo build da nova imagem..."
            docker compose build --no-cache
            
            # Subir os containers atualizados
            echo "Iniciando containers atualizados..."
            docker compose up -d --remove-orphans
            
            # Limpar imagens antigas que não estão sendo usadas
            echo "Limpando imagens antigas..."
            docker image prune -f
            
            # Mostrar status dos containers
            echo "Status dos containers:"
            docker compose ps
            
            echo "Deploy concluído com sucesso!"


